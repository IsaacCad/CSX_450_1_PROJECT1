Step 1 choose oregon ( or any location but be consistent.,, use ec2 ( elastic cloud compute) bread and butter
Step 2) Click services → Click EC2 → Launch instance → pick AMI Ubuntu
		#EVEN numbers are stable ones
Step 3) Click Key pairs // setting up key pairs
         i) import key pairs 
              Give it a name like Jan_2018  Nate_MacPro17
		#input in contents 
	Run in terminal Command cat~/.ssh/id_rsa.pub
         Copy paste into terminal the RSA KEY
    ii) set up a security group, under network & security
       Type SSh // ssh always set up to port 22
                      // 443 https   80 is http   These are all protocals, rules for connecting two computers over the internet
    Type       				PORT RANGE             sOURCE
    Custom TCP PROTOCAL       8888     			Anywhere
  Custom  				2376  // docker hub         
Custom tcp				27016 // Mongo db 
              ( not the 27017 which is default mongo with no . security)
       Source for all of these is anywhere
You can give it a security group name ( does not matter)
Description : ssh, jupyter, docker, mongo
Then hit create.
		# Source where you can connect from
If you click on it 
--
Go back to the EC2 dash board and start up an instance
Step 1) (i)choose an amazon machine image
     // an image is like a cd, frozen in place not moving, static, 
     // these images are like full computer operating systems all ready to go
   (ii)  Select Ubuntu ( usually # 5)   // very popular
  (iii) we will use a t2 micro ( only 2 gigs of memory)
(iv) click configure instance details → chose 1 for number of instance
(v) add storage 30 gigabits free   // 10 cents a gigabyte a month
(vi) add security group and pick the one we just made,
(vii) click tab 7 the review, get a yellow warning saying we are opening it to the internet
(viii) launch,    → select an existing key pair. // use the one we just added
(ix) click view instances or go to ec2 dashboard and look at running instances → click pencil and give it a name   → copy the public IP address      IPv4
Go back to terminal
// creating a secure shell or ssh
Ssh ubuntu@(paste of public ip address)
     # the user is named ubuntu, 
     # we connect to our computer using born again shell
     # we connect to amazon using a born again shell.
After you hit enter your should see in terminal
   ubuntu@ip….
//* we are going to use a program called curl.
   Curl downloads files from a web address.
   We are going to give it some flags */
Command : curl -sSL https://get.docker.com # good practice
Command : curl -sSL https://get.docker.com | sh # bad practice
     // the |sh lets us pipe in a random script into our shell directly. This one lets docker take over the aws instance. Normally you would download and analyse this.
            Next command
Command : Sudo usermod -aG docker ubuntu // if we dont do this, the everytime we run docker we will have to do SUDU or SUDO
COMMAND : cntrl D disconnects
Command : docker -v (? I think) #   this is supposed to recconect us 
Command : docker pull jupyter/datascience-notebook
Command : docker run -v /home/ubuntu:/home/jovyan -p 8888:8888 -d jupyter/datascience-notebook
     #Jovyan is the user in the jupyter image
    #datascience-notebook is the name of the image
 docker run -v /home/ubuntu:/home/jovyan -p 8888:8888 -d jupyter/datascience-notebook
 // jupyter security portion
Command : docker exec 304e
                       #304e is the first 4 chars he got back in his string. Our string and every individual string will be different, we will get an http::/localhost… jovyan. We copy from http up until the to the ::   
Paste this in html
     -------
